# Generated by json_schema_to_code v1.0.1 : json_schema_to_code
from __future__ import annotations

from abc import ABC
from dataclasses import dataclass
from typing import Any, Literal

from dataclasses_json import dataclass_json

AnyOrStr = Any | str
FloatOrStr = float | str


@dataclass_json
@dataclass(kw_only=True)
class Style:
    width: FloatOrStr | None = None
    height: FloatOrStr | None = None
    margin: AnyOrStr | None = None
    padding: AnyOrStr | None = None
    backgroundColor: str | None = None
    color: str | None = None
    fontSize: FloatOrStr | None = None
    fontWeight: FloatOrStr | None = None
    fontFamily: str | None = None
    textAlign: str | None = None
    border: str | None = None
    borderRadius: FloatOrStr | None = None
    boxShadow: str | None = None
    display: str | None = None
    position: str | None = None
    top: FloatOrStr | None = None
    left: FloatOrStr | None = None
    right: FloatOrStr | None = None
    bottom: FloatOrStr | None = None
    zIndex: float | None = None
    opacity: float | None = None
    overflow: str | None = None
    cursor: str | None = None
    visible: bool = True


@dataclass_json
@dataclass(kw_only=True)
class BaseUIObject(ABC):
    type: str
    id: str | None = None
    style: NoneOrStyle = None
    enabled: bool = True
    className: str | None = None
    metadata: Any | None = None


@dataclass_json
@dataclass(kw_only=True)
class TextObject(BaseUIObject):
    content: str
    type: Literal["text"] = "text"
    placeholder: str | None = None


@dataclass_json
@dataclass(kw_only=True)
class ButtonObject(BaseUIObject):
    label: str
    type: Literal["button"] = "button"
    action: str | None = None
    variant: str | None = None
    disabled: bool = False


@dataclass_json
@dataclass(kw_only=True)
class InputObject(BaseUIObject):
    type: Literal["input"] = "input"
    inputType: str = "text"
    value: str | None = None
    placeholder: str | None = None
    required: bool = False
    maxLength: int | None = None
    minLength: int | None = None


@dataclass_json
@dataclass(kw_only=True)
class ImageObject(BaseUIObject):
    src: str
    alt: str
    type: Literal["image"] = "image"
    caption: str | None = None


@dataclass_json
@dataclass(kw_only=True)
class ContainerObject(BaseUIObject):
    type: Literal["container"] = "container"
    layout: str = "block"
    direction: str = "column"
    justifyContent: str | None = None
    alignItems: str | None = None
    children: list[UiObjectUnion] | None = None


@dataclass_json
@dataclass(kw_only=True)
class ListObject(BaseUIObject):
    type: Literal["list"] = "list"
    ordered: bool = False
    items: list[UiObjectUnion] | None = None


@dataclass_json
@dataclass(kw_only=True)
class ModalObject(BaseUIObject):
    title: str
    content: UiObjectUnion
    type: Literal["modal"] = "modal"
    closable: bool = True
    backdrop: bool = True


@dataclass_json
@dataclass(kw_only=True)
class FormObject(BaseUIObject):
    fields: list[UiObjectUnion]
    type: Literal["form"] = "form"
    action: str | None = None
    method: str = "POST"


@dataclass_json
@dataclass(kw_only=True)
class TableObject(BaseUIObject):
    headers: list[str]
    rows: list[list[UiObjectUnion]]
    type: Literal["table"] = "table"
    sortable: bool = False


NoneOrStyle = None | Style
UiObjectUnion = (
    ButtonObject
    | ContainerObject
    | FormObject
    | ImageObject
    | InputObject
    | ListObject
    | ModalObject
    | TableObject
    | TextObject
)
