[
  {
    "name": "basic_default_values",
    "description": "Test basic default values for primitive types",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "TestClass": {
          "type": "object",
          "properties": {
            "string_with_default": {
              "type": "string",
              "default": "hello"
            },
            "number_with_default": {
              "type": "number", 
              "default": 42.5
            },
            "integer_with_default": {
              "type": "integer",
              "default": 10
            },
            "boolean_with_default": {
              "type": "boolean",
              "default": true
            },
            "string_without_default": {
              "type": "string"
            }
          },
          "required": ["string_without_default"]
        }
      }
    },
    "expected_python": [
      "string_with_default: str = \"hello\"",
      "number_with_default: float = 42.5",
      "integer_with_default: int = 10", 
      "boolean_with_default: bool = True",
      "string_without_default: str"
    ],
    "expected_cs": [
      "public string string_with_default = \"hello\";",
      "public float number_with_default = 42.5;",
      "public int integer_with_default = 10;",
      "public bool boolean_with_default = true;",
      "public string string_without_default;"
    ]
  },
  {
    "name": "optional_with_defaults",
    "description": "Test nullable types with defaults",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "TestClass": {
          "type": "object",
          "properties": {
            "optional_string_with_default": {
              "type": ["string", "null"],
              "default": "default_value"
            },
            "optional_number_with_null_default": {
              "type": ["number", "null"],
              "default": null
            },
            "optional_string_without_default": {
              "type": ["string", "null"]
            }
          }
        }
      }
    },
    "expected_python": [
      "optional_string_with_default: str | None = \"default_value\"",
      "optional_number_with_null_default: float | None = None",
      "optional_string_without_default: str | None = None"
    ],
    "expected_cs": [
      "public string? optional_string_with_default = \"default_value\";",
      "public float? optional_number_with_null_default = null;",
      "public string? optional_string_without_default;"
    ]
  },
  {
    "name": "array_defaults",
    "description": "Test array types with default values",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#", 
      "definitions": {
        "TestClass": {
          "type": "object",
          "properties": {
            "string_array_with_default": {
              "type": "array",
              "items": {"type": "string"},
              "default": ["item1", "item2"]
            },
            "empty_array_default": {
              "type": "array", 
              "items": {"type": "integer"},
              "default": []
            }
          }
        }
      }
    },
    "expected_python": [
      "string_array_with_default: list[str] = [\"item1\", \"item2\"]",
      "empty_array_default: list[int] = []"
    ],
    "expected_cs": [
      "public List<string> string_array_with_default = new List<string> {\"item1\", \"item2\"};",
      "public List<int> empty_array_default = new List<int>();"
    ]
  },
  {
    "name": "required_vs_optional_fields",
    "description": "Test that fields not in required list become nullable when they lack defaults",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "TestClass": {
          "type": "object",
          "properties": {
            "required_field": {
              "type": "string"
            },
            "required_with_default": {
              "type": "string", 
              "default": "hello"
            },
            "optional_field": {
              "type": "string"
            },
            "optional_with_default": {
              "type": "integer",
              "default": 42
            }
          },
          "required": ["required_field", "required_with_default"]
        }
      }
    },
    "expected_python": [
      "required_field: str",
      "required_with_default: str = \"hello\"",
      "optional_field: str | None = None",
      "optional_with_default: int = 42"
    ],
    "expected_cs": [
      "public string required_field;",
      "public string required_with_default = \"hello\";",
      "public string? optional_field;",
      "public int optional_with_default = 42;"
    ]
  },
  {
    "name": "oneOf_with_null_default",
    "description": "Test oneOf with null default value - BaseComponent style property issue",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$defs": {
        "Style": {
          "type": "object",
          "properties": {
            "color": {
              "type": "string"
            }
          }
        }
      },
      "definitions": {
        "BaseComponent": {
          "type": "object",
          "properties": {
            "className": {
              "type": "string",
              "description": "CSS class names",
              "default": ""
            },
            "style": {
              "oneOf": [
                {
                  "$ref": "#/$defs/Style"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional styling configuration for the component",
              "default": null
            }
          }
        }
      }
    },
    "expected_python": [
      "className: str = \"\"",
      "style: NoneOrStyle = None",
      "NoneOrStyle = None | Style"
    ],
    "expected_cs": [
      "public string className = \"\";",
      "public StyleOrNull style = null;"
    ]
  }
]
