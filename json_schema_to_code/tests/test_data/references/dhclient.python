# Generated by json_schema_to_code v1.0.1 : json_schema_to_code
from __future__ import annotations
from abc import ABC
from dataclasses import dataclass, field
from dataclasses_json import config, dataclass_json

IntOrStr = int | str
@dataclass_json
@dataclass(kw_only=True)
class DHMessage(ABC):
    type: str
    id: list[IntOrStr]

@dataclass_json
@dataclass(kw_only=True)
class DHMError(DHMessage):
    code: int
    codeDescription: str
    service: int
    serviceDescription: str
    serviceProvider: int
    serviceProviderDescription: str
    message: str

@dataclass_json
@dataclass(kw_only=True)
class DHMChatInfo(DHMessage):
    pass

@dataclass_json
@dataclass(kw_only=True)
class DHMSetChatView(DHMessage):
    view: ChatViewConfig

@dataclass_json
@dataclass(kw_only=True)
class DHMAgentChatView(DHMessage):
    agentId: int
    view: ChatViewInfo

@dataclass_json
@dataclass(kw_only=True)
class DHMAddHuman(DHMessage):
    humanId: int

@dataclass_json
@dataclass(kw_only=True)
class DHMAddAgent(DHMessage):
    agentId: int

@dataclass_json
@dataclass(kw_only=True)
class DHMHumanTextChunk(DHMessage):
    humanId: int
    text: str
    final: bool

@dataclass_json
@dataclass(kw_only=True)
class DHMHumanAction(DHMessage):
    humanId: int
    actionType: str
    action: str

@dataclass_json
@dataclass(kw_only=True)
class DHMHumanAudioChunk(DHMessage):
    humanId: int
    buffer: str
    sampleIndex: int
    sampleRate: int
    channels: int
    format: str
    final: bool
    language: str

@dataclass_json
@dataclass(kw_only=True)
class DHMHumanImage(DHMessage):
    humanId: int
    text: str
    url: str

@dataclass_json
@dataclass(kw_only=True)
class DHMAgentTextChunk(DHMessage):
    agentId: int
    text: str
    final: bool
    system: bool

@dataclass_json
@dataclass(kw_only=True)
class DHMAgentTimedMediaChunk(DHMessage):
    agentId: int
    timedMedia: list[TimedMedia] | None = None

@dataclass_json
@dataclass(kw_only=True)
class TimedMedia(ABC):
    type: str
    time: float
    duration: float | None = None

@dataclass_json
@dataclass(kw_only=True)
class TimedAudio(TimedMedia):
    buffer: str
    sampleIndex: int
    sampleRate: int
    channels: int
    audioByteSize: int

@dataclass_json
@dataclass(kw_only=True)
class TimedViseme(TimedMedia):
    viseme: str

@dataclass_json
@dataclass(kw_only=True)
class TimedText(TimedMedia):
    textType: str
    text: str

@dataclass_json
@dataclass(kw_only=True)
class ActionDefinition:
    type: str
    attributes: list[list[str]]

@dataclass_json
@dataclass(kw_only=True)
class TimedAction(TimedMedia):
    span: str
    startId: int
    endId: int
    actionId: str | None = None
    actionDefinition: ActionDefinition | None = None

@dataclass_json
@dataclass(kw_only=True)
class TimedMetadata(TimedMedia):
    sampleRate: int
    channels: int
    totalAudioByteSize: int
    final: bool
    totalAudioSamples: int | None = None

@dataclass_json
@dataclass(kw_only=True)
class DHMAgentActionDefinition(DHMessage):
    agentId: int
    actionId: str
    actionDefinition: ActionDefinition

@dataclass_json
@dataclass(kw_only=True)
class DHMMetadata(DHMessage):
    metadata: list[list[str]] | None = None

@dataclass_json
@dataclass(kw_only=True)
class ChatViewTextConfig:
    enabled: bool = True
    source: bool = False

@dataclass_json
@dataclass(kw_only=True)
class ChatViewSpeechConfig:
    enabled: bool = False

@dataclass_json
@dataclass(kw_only=True)
class ChatViewVisemeConfig:
    enabled: bool = False

@dataclass_json
@dataclass(kw_only=True)
class ChatViewConfig:
    text: ChatViewTextConfig
    speech: ChatViewSpeechConfig
    viseme: ChatViewVisemeConfig
    language: str = "en-US"

@dataclass_json
@dataclass(kw_only=True)
class ChatViewTextInfo:
    enabled: bool = True
    source: bool = False

@dataclass_json
@dataclass(kw_only=True)
class ChatViewSpeechInfo:
    enabled: bool = False
    sampleRate: float = -1
    channels: float = 1
    bitsPerSample: float = 16
    format: str = "PCM"

@dataclass_json
@dataclass(kw_only=True)
class ChatViewVisemeInfo:
    enabled: bool = False

@dataclass_json
@dataclass(kw_only=True)
class ChatViewInfo:
    text: ChatViewTextInfo
    speech: ChatViewSpeechInfo
    viseme: ChatViewVisemeInfo
    language: str = "en-US"
